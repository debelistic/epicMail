{"version":3,"sources":["../../server/models/User.js"],"names":["UserModel","users","firstName","lastName","contactName","password","confirmPassword","user","newUser","id","createdOn","Date","modifiedOn","message","test","hashPassword","HelperModule","hashConfirmPassword","push","mailaddress","find","aUser","comparePassword","auser"],"mappings":"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","sourcesContent":["import HelperModule from './Helper';\r\nimport randomId from './randomid';\r\n\r\nclass UserModel {\r\n  constructor() {\r\n    this.users = [\r\n      {\r\n        firstName: 'victor',\r\n        lastName: 'tolulope',\r\n        contactName: 'deviclistic23',\r\n        password: 'hjrjfhrjf9980GH#',\r\n        confirmPassword: 'hjrjfhrjf9980GH#',\r\n      },\r\n      {\r\n        firstName: 'test',\r\n        lastName: 'annie',\r\n        contactName: 'funmilayo',\r\n        password: 'tyrywruJKU89$',\r\n        confirmPassword: 'tyrywruJKU89$',\r\n      },\r\n    ];\r\n  }\r\n\r\n  createUser(user) {\r\n    const newUser = {\r\n      id: randomId(),\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      contactName: `${user.contactName}@epicmail.com`,\r\n      password: user.password,\r\n      confirmPassword: user.confirmPassword,\r\n      createdOn: Date(),\r\n      modifiedOn: Date(),\r\n    };\r\n    if (!newUser.firstName || !newUser.lastName\r\n      || !newUser.contactName || !newUser.password\r\n      || !newUser.confirmPassword) {\r\n      return { message: 'All fields are required' };\r\n    }\r\n    if (!/^[a-z\\d]{5,}$/i.test(user.contactName)) {\r\n      return { message: 'Use a valid contact name' };\r\n    }\r\n    if (newUser.password !== newUser.confirmPassword) {\r\n      return {\r\n        message: 'Password should match',\r\n      };\r\n    }\r\n    const hashPassword = HelperModule.hashPassword(newUser.password);\r\n    const hashConfirmPassword = HelperModule.hashPassword(newUser.confirmPassword);\r\n    newUser.password = hashPassword;\r\n    newUser.confirmPassword = hashConfirmPassword;\r\n\r\n    this.users.push(newUser);\r\n    return {\r\n      message: `User account created for ${newUser.firstName} ${newUser.lastName}`,\r\n      mailaddress: `Your EPIC email address is ${newUser.contactName}`,\r\n      newUser,\r\n    };\r\n  }\r\n\r\n  getUserContactName(contactName) {\r\n    const user = this.users.find(aUser => aUser.contactName === `${contactName}@epicmail.com`);\r\n    return user;\r\n  }\r\n\r\n  getAUser(contactName, password) {\r\n    const user = this.users.find(aUser => aUser.contactName === `${contactName}@epicmail.com`);\r\n\r\n    if (!user.contactName || !user.password) {\r\n      return { message: 'Signin details does not match' };\r\n    }\r\n\r\n    if (!HelperModule.comparePassword(password, user.password)) {\r\n      return { message: 'Invalid password' };\r\n    }\r\n    return user;\r\n  }\r\n\r\n  getAUserWithId(id) {\r\n    const user = this.users.find(auser => auser.id === id);\r\n    return user;\r\n  }\r\n\r\n  getAllusers() {\r\n    return this.users;\r\n  }\r\n}\r\n\r\n\r\nexport default new UserModel();\r\n"],"file":"User.js"}