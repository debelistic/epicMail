{"version":3,"sources":["../../server/controllers/MessageController.js"],"names":["MessageController","create","req","res","createMessageQuery","values","body","user","receiverId","subject","message","parentMessageId","status","db","query","rows","send","getInbox","findInboxQuery","id","rowCount","getAInbox","findAInboxMailQuery","params","mail","getSent","findSentQuery","getASent","findASentMailQuery","sent","deleteAInbox","deleteAInboxMailQuery","deleteASent","deleteASentMailQuery"],"mappings":"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","sourcesContent":["import db from '../db';\r\n\r\nconst MessageController = {\r\n  /**\r\n   * create a new message\r\n   * @param { object } req\r\n   * @param { object } res\r\n   * @returns { object } message object\r\n   */\r\n  async create(req, res) {\r\n    // if (!req.body.subject || !req.body.message || !req.body.status || !req.body.receiverId) {\r\n    //   return res.status(400).send({ message: 'You have one or more empty fields' });\r\n    // }\r\n    // if (!req.user) {\r\n    //   return res.status(400).send({ message: 'User not logged in' });\r\n    // }\r\n    const createMessageQuery = `INSERT INTO\r\n        messages(senderId, receiverId, subject, message, parentMessageId, status)\r\n        VALUES($1, $2, $3, $4, $5, $6)\r\n        returning *`;\r\n    const values = [\r\n      req.body.user,\r\n      req.body.receiverId,\r\n      req.body.subject,\r\n      req.body.message,\r\n      req.body.parentMessageId,\r\n      req.body.status,\r\n    ];\r\n\r\n    try {\r\n      const { rows } = await db.query(createMessageQuery, values);\r\n      return res.status(201).send(rows[0]);\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * get inbox for a user\r\n   * @param { object } req\r\n   * @param { object } res\r\n   * @returns { object } inbox array\r\n   */\r\n\r\n  async getInbox(req, res) {\r\n    const findInboxQuery = 'SELECT * FROM messages WHERE receiverId = $1';\r\n    try {\r\n      const { rows, rowCount } = await db.query(findInboxQuery, [req.user.id]);\r\n      return res.status(200).send({ rows, rowCount });\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * get a user inbox message\r\n   * @param { object } req\r\n   * @param { object } res\r\n   * @returns { object } inbox mail object\r\n   */\r\n  async getAInbox(req, res) {\r\n    const findAInboxMailQuery = 'SELECT FROM messages WHERE id=$1 AND receiverId = $2';\r\n    try {\r\n      const { rows } = await db.query(findAInboxMailQuery, [req.params.id, req.user.id]);\r\n      if (!rows[0]) {\r\n        return res.status(404).send({ message: 'we could not find your mail' });\r\n      }\r\n      return res.status(200).send({ mail: rows[0] });\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * get all sent mails\r\n   * @param { object } req\r\n   * @param { object } res\r\n   * @returns { object } sent array\r\n   */\r\n  async getSent(req, res) {\r\n    const findSentQuery = 'SELECT * FROM messages WHERE senderId = $1';\r\n    try {\r\n      const { rows, rowCount } = await db.query(findSentQuery, [req.user.id]);\r\n      return res.status(200).send({ rows, rowCount });\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * get a user sent mail\r\n   * @param { object } req\r\n   * @param { object } res\r\n   * @returns { object } sent mail object\r\n   */\r\n  async getASent(req, res) {\r\n    const findASentMailQuery = 'SELECT * FROM messages WHERE id = $1 AND senderId = $2';\r\n    try {\r\n      const { rows } = await db.query(findASentMailQuery, [req.params.id, req.user.id]);\r\n      if (!rows[0]) {\r\n        return res.status(404).send({ message: 'we could not find your mail' });\r\n      }\r\n      return res.status(200).send({ sent: rows[0] });\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * delete a mail from inbox\r\n   * @param { object } req\r\n   * @param { object } res\r\n   * @returns { object } success or error\r\n   */\r\n  async deleteAInbox(req, res) {\r\n    const deleteAInboxMailQuery = 'DELETE FROM messages WHERE id=$1 AND receiverId = $2';\r\n    try {\r\n      const { rows } = await db.query(deleteAInboxMailQuery, [req.params.id, req.user.id]);\r\n      if (!rows[0]) {\r\n        return res.status(404).send({ message: 'we could not find your mail' });\r\n      }\r\n      return res.status(204).send({ message: 'deleted' });\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * delete a mail from sent\r\n   * @param { object } req\r\n   * @param { object } res\r\n   * @returns { object } success or error\r\n   */\r\n  async deleteASent(req, res) {\r\n    const deleteASentMailQuery = 'DELETE FROM messages WHERE id=$1 AND senderId = $2';\r\n    try {\r\n      const { rows } = await db.query(deleteASentMailQuery, [req.params.id, req.user.id]);\r\n      if (!rows[0]) {\r\n        return res.status(404).send({ message: 'we could not find your mail' });\r\n      }\r\n      return res.status(204).send({ message: 'deleted' });\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n};\r\n\r\nexport default MessageController;\r\n"],"file":"MessageController.js"}