{"version":3,"sources":["../../server/controllers/GroupController.js"],"names":["GroupController","createGroup","req","res","body","name","description","user","status","send","message","createGroupQuery","values","id","db","query","rows","joinGroup","groupName","joinGroupQuery","seeGroupMessages","findGroupMessagesQuery","rowCount","seeGroupMembers","seeGroupMembersQuery","sendGroupMessage","groupMessageQuery","deleteAGroupMember","deleteAGroupMemberQuery","memberId"],"mappings":"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","sourcesContent":["import db from '../db';\r\n\r\nconst GroupController = {\r\n  /**\r\n   * create user group\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @returns {object} group\r\n   */\r\n  async createGroup(req, res) {\r\n    if (!req.body.name || !req.body.description || req.user) {\r\n      return res.status(400).send({ message: 'All fields are required' });\r\n    }\r\n    const createGroupQuery = `INSER INTO\r\n    groups(name, description, ownerId)\r\n    VALUES($1, $2, $3)\r\n    returning *`;\r\n    const values = [\r\n      req.body.name,\r\n      req.body.description,\r\n      req.user.id,\r\n    ];\r\n    try {\r\n      const { rows } = await db.query(createGroupQuery, values);\r\n      return res.status(201).send(rows[0]);\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * group owner add users join a group\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @returns {object} group array\r\n   */\r\n  async joinGroup(req, res) {\r\n    if (!req.body.groupName || !req.user) {\r\n      return res.status(400).send({ message: 'enter a group name' });\r\n    }\r\n    const joinGroupQuery = `INSER INTO\r\n    groupmembers(groupName, memberId)\r\n    VALUES($1, $2)\r\n    returning *`;\r\n    const values = [\r\n      req.body.groupName,\r\n      req.user.id,\r\n    ];\r\n    try {\r\n      const { rows } = await db.query(joinGroupQuery, values);\r\n      return res.status(201).send(rows[0]);\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n   * see group messages\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @returns {object} array of group messages\r\n   */\r\n  async seeGroupMessages(req, res) {\r\n    if (!req.body.groupName || !req.user) {\r\n      return res.status(403).send({ message: 'you are not a member' });\r\n    }\r\n    const findGroupMessagesQuery = 'SELECT * FROM groupmessages WHERE memberId = $1 AND groupName = $2';\r\n    try {\r\n      // eslint-disable-next-line max-len\r\n      const { rows, rowCount } = await db.query(findGroupMessagesQuery, [req.user.id, req.body.groupName]);\r\n      if (!rows[0]) {\r\n        return res.status(403).send({ message: 'you are not a member' });\r\n      }\r\n      return res.status(200).send({ rows, rowCount });\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * returns an array of group members\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @returns {object} group members array\r\n   */\r\n  async seeGroupMembers(req, res) {\r\n    if (!req.body.groupName || !req.user) {\r\n      return res.status(403).send({ message: 'you are not a member' });\r\n    }\r\n    const seeGroupMembersQuery = 'SELECT * FROM groupmember WHERE memberId = $1 AND groupName = $2';\r\n    try {\r\n      // eslint-disable-next-line max-len\r\n      const { rows, rowCount } = await db.query(seeGroupMembersQuery, [req.user.id, req.body.groupName]);\r\n      if (!rows[0]) {\r\n        return res.status(403).send({ message: 'you are not a member' });\r\n      }\r\n      return res.status(200).send({ rows, rowCount });\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * sends message to a group where sender is member or owner\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @returns {object} sent message\r\n   */\r\n  async sendGroupMessage(req, res) {\r\n    if (!req.body.message || !req.body.groupName || !req.user) {\r\n      return res.status(400).send({ message: 'enter a text' });\r\n    }\r\n    const groupMessageQuery = `INSER INTO\r\n      groupmessages(message, groupName, ownerId)\r\n      VALUES($1, $2, $3)\r\n      returning *`;\r\n    const values = [\r\n      req.body.message,\r\n      req.body.groupName,\r\n      req.user.id,\r\n    ];\r\n    try {\r\n      const { rows } = await db.query(groupMessageQuery, values);\r\n      return res.status(201).send(rows[0]);\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n   * deletes a group member\r\n   * @param {object} req\r\n   * @param {object} res\r\n   * @returns {object} group members array\r\n   */\r\n  async deleteAGroupMember(req, res) {\r\n    const deleteAGroupMemberQuery = 'DELETE FROM groupmembers WHERE memberId=$1 AND ownerId = $2';\r\n    try {\r\n      const { rows } = await db.query(deleteAGroupMemberQuery, [req.body.memberId, req.user.id]);\r\n      if (!rows[0]) {\r\n        return res.status(404).send({ message: 'memberdoes not not exist' });\r\n      }\r\n      return res.status(204).send({ message: 'deleted' });\r\n    } catch (err) {\r\n      return res.status(400).send(err);\r\n    }\r\n  },\r\n};\r\n\r\nexport default GroupController;\r\n"],"file":"GroupController.js"}