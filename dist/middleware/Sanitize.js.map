{"version":3,"sources":["../../server/middleware/Sanitize.js"],"names":["require","Sanitize","trimInput","req","res","next","method","Object","entries","body","key","value","trim","lowerCaseInput","username"],"mappings":";;;;;;;;;;;;;;;;;;;AAAAA,OAAO,CAAC,iBAAD,CAAP;;AAEA,IAAMC,QAAQ,GAAG;AACf;;;;;;;AAOMC,EAAAA,SARS;AAAA;AAAA;AAAA,6CAQCC,GARD,EAQMC,GARN,EAQWC,IARX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUX,kBAAIF,GAAG,CAACG,MAAJ,KAAe,MAAnB,EAA2B;AAC3B;AAD2B,uBAEEC,MAAM,CAACC,OAAP,CAAeL,GAAG,CAACM,IAAnB,CAFF;;AAEzB,qDAAqD;AAAA,yDAAzCC,GAAyC,eAApCC,KAAoC;AACnDR,kBAAAA,GAAG,CAACM,IAAJ,CAASC,GAAT,IAAgBC,KAAK,CAACC,IAAN,EAAhB;AACD;AACF;;AAfU,+CAgBJP,IAAI,EAhBA;;AAAA;AAAA;AAAA;AAAA,+CAkBJA,IAAI,aAlBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqBTQ,EAAAA,cArBS;AAAA;AAAA;AAAA,8CAqBMV,GArBN,EAqBWC,GArBX,EAqBgBC,IArBhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBX,kBAAIF,GAAG,CAACM,IAAJ,CAASK,QAAb,EAAuB;AACvB;AADuB,wBAEMP,MAAM,CAACC,OAAP,CAAeL,GAAG,CAACM,IAAnB,CAFN;;AAErB,yDAAqD;AAAA,4DAAzCC,GAAyC,gBAApCC,KAAoC;AACnDR,kBAAAA,GAAG,CAACM,IAAJ,CAASC,GAAT,IAAgBC,KAAK,CAACC,IAAN,EAAhB;AACD;AACF;;AA5BU,gDA6BJP,IAAI,EA7BA;;AAAA;AAAA;AAAA;AAAA,gDA+BJA,IAAI,cA/BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAjB;eAqCeJ,Q","sourcesContent":["require('@babel/polyfill');\n\nconst Sanitize = {\n  /**\n   * This is taken from discussion at:\n   * https://stackoverflow.com/questions/30266295/using-express-can-i-automatically-trim-all-incoming-posted-fields-in-req-body\n   * @param {request object} req\n   * @param {response object} res\n   * @param {next middleware} next\n   */\n  async trimInput(req, res, next) {\n    try {\n      if (req.method === 'POST') {\n      // eslint-disable-next-line no-restricted-syntax\n        for (const [key, value] of Object.entries(req.body)) {\n          req.body[key] = value.trim();\n        }\n      }\n      return next();\n    } catch (error) {\n      return next(error);\n    }\n  },\n  async lowerCaseInput(req, res, next) {\n    try {\n      if (req.body.username) {\n      // eslint-disable-next-line no-restricted-syntax\n        for (const [key, value] of Object.entries(req.body)) {\n          req.body[key] = value.trim();\n        }\n      }\n      return next();\n    } catch (error) {\n      return next(error);\n    }\n  },\n};\n\n\nexport default Sanitize;\n"],"file":"Sanitize.js"}