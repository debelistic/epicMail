{"version":3,"sources":["../../server/middleware/Auth.js"],"names":["Auth","verifyToken","req","res","next","token","headers","status","send","message","decoded","jwt","verify","process","env","SECRET","text","db","query","userEmail","rows","user","email","error"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,OAAO;AACLC,aADK,uBACOC,GADP,EACYC,GADZ,EACiBC,IADjB,EACuB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC1BC,mBAD0B,GAClBH,IAAII,OAAJ,CAAY,gBAAZ,CADkB;;AAAA,kBAG3BD,KAH2B;AAAA;AAAA;AAAA;;AAAA,+CAIvBF,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,mBAAX,EAArB,CAJuB;;AAAA;AAAA;AAOxBC,qBAPwB,GAOdC,uBAAIC,MAAJ,CAAWP,KAAX,EAAkBQ,QAAQC,GAAR,CAAYC,MAA9B,CAPc;AAQxBC,kBARwB,GAQjB,sCARiB;AAAA;AAAA,qBASPC,aAAGC,KAAH,CAASF,IAAT,EAAe,CAACN,QAAQS,SAAT,CAAf,CATO;;AAAA;AAAA;AAStBC,kBATsB,QAStBA,IATsB;;AAAA,kBAUzBA,KAAK,CAAL,CAVyB;AAAA;AAAA;AAAA;;AAAA,+CAWrBjB,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,gBAAX,EAArB,CAXqB;;AAAA;AAa9BP,kBAAImB,IAAJ,GAAW,EAAEC,OAAOZ,QAAQS,SAAjB,EAAX;AAb8B,+CAcvBf,MAduB;;AAAA;AAAA;AAAA;AAAA,+CAgBvBD,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEe,kBAAF,EAArB,CAhBuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBjC;AAnBU,CAAb;;kBAsBevB,I","file":"Auth.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport db from '../db';\n\nconst Auth = {\n  async verifyToken(req, res, next) {\n    const token = req.headers['x-access-token'];\n\n    if (!token) {\n      return res.status(403).send({ message: 'No Token Provided' });\n    }\n    try {\n      const decoded = jwt.verify(token, process.env.SECRET);\n      const text = 'SELECT * FROM users WHERE email = $1';\n      const { rows } = await db.query(text, [decoded.userEmail]);\n      if (!rows[0]) {\n        return res.status(403).send({ message: 'Session closed' });\n      }\n      req.user = { email: decoded.userEmail };\n      return next();\n    } catch (error) {\n      return res.status(400).send({ error });\n    }\n  },\n};\n\nexport default Auth;\n"]}