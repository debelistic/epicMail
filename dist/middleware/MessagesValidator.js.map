{"version":3,"sources":["../../server/middleware/MessagesValidator.js"],"names":["ValidateMessageInput","newMessageInput","req","res","checkReceiverEmailQuery","db","query","body","receiverEmail","rows","send","status","data","message","subject","user","email","receiverId","error"],"mappings":";;;;;;AACA;;;;;;2cADA;;;AAGA,IAAMA,uBAAuB;AACrBC,iBADqB,2BACLC,GADK,EACAC,GADA,EACK;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtBC,qCAFsB,GAEI,oCAFJ;AAAA;AAAA,qBAGLC,aAAGC,KAAH,CAASF,uBAAT,EAAkC,CAACF,IAAIK,IAAJ,CAASC,aAAV,CAAlC,CAHK;;AAAA;AAAA;AAGpBC,kBAHoB,QAGpBA,IAHoB;;AAAA,kBAIvBA,KAAK,CAAL,CAJuB;AAAA;AAAA;AAAA;;AAAA,+CAKnBN,IAAIO,IAAJ,CAAS;AACdC,wBAAQ,GADM;AAEdC,sBAAM,CAAC;AACLC,2BAAS;AADJ,iBAAD;AAFQ,eAAT,CALmB;;AAAA;AAAA,kBAYvBX,IAAIK,IAAJ,CAASO,OAZc;AAAA;AAAA;AAAA;;AAAA,+CAanBX,IAAIO,IAAJ,CAAS;AACdC,wBAAQ,GADM;AAEdC,sBAAM,CAAC;AACLC,2BAAS;AADJ,iBAAD;AAFQ,eAAT,CAbmB;;AAAA;AAAA,kBAoBvBX,IAAIK,IAAJ,CAASM,OApBc;AAAA;AAAA;AAAA;;AAAA,+CAqBnBV,IAAIO,IAAJ,CAAS;AACdC,wBAAQ,GADM;AAEdC,sBAAM,CAAC;AACLC,2BAAS;AADJ,iBAAD;AAFQ,eAAT,CArBmB;;AAAA;AAAA,kBA4BvBX,IAAIa,IA5BmB;AAAA;AAAA;AAAA;;AAAA,+CA6BnBZ,IAAIO,IAAJ,CAAS;AACdC,wBAAQ,GADM;AAEdC,sBAAM,CAAC;AACLC,2BAAS;AADJ,iBAAD;AAFQ,eAAT,CA7BmB;;AAAA;AAAA,oBAoCxBX,IAAIa,IAAJ,CAASC,KAAT,KAAmBd,IAAIK,IAAJ,CAASU,UApCJ;AAAA;AAAA;AAAA;;AAAA,+CAqCnBd,IAAIO,IAAJ,CAAS;AACdC,wBAAQ,GADM;AAEdC,sBAAM,CAAC;AACLC,2BAAS;AADJ,iBAAD;AAFQ,eAAT,CArCmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+CA6CrBV,IAAIO,IAAJ,CAAS;AACdC,wBAAQ,GADM;AAEdC,sBAAM,CAAC;AACLM;AADK,iBAAD;AAFQ,eAAT,CA7CqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoD/B;AArD0B,CAA7B;;kBAwDelB,oB","file":"MessagesValidator.js","sourcesContent":["/* eslint-disable consistent-return */\nimport db from '../db';\n\nconst ValidateMessageInput = {\n  async newMessageInput(req, res) {\n    try {\n      const checkReceiverEmailQuery = 'SELECT * FROM users WHERE $1=email';\n      const { rows } = await db.query(checkReceiverEmailQuery, [req.body.receiverEmail]);\n      if (!rows[0]) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Receiver email does not exist',\n          }],\n        });\n      }\n      if (!req.body.subject) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'No subject is declared',\n          }],\n        });\n      }\n      if (!req.body.message) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'No message content',\n          }],\n        });\n      }\n      if (!req.user) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Login to your account',\n          }],\n        });\n      }\n      if (req.user.email === req.body.receiverId) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Your message will be moved to drafts',\n          }],\n        });\n      }\n    } catch (error) {\n      return res.send({\n        status: 400,\n        data: [{\n          error,\n        }],\n      });\n    }\n  },\n};\n\nexport default ValidateMessageInput;\n"]}