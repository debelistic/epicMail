{"version":3,"sources":["../../server/middleware/MessagesValidator.js"],"names":["ValidateMessageInput","newMessageInput","req","res","checkReceiverEmailQuery","db","query","body","receiverEmail","rows","send","status","data","message","subject","user","email","receiverId","error"],"mappings":";;;;;;;AACA;;;;;;;;AAEA,IAAMA,oBAAoB,GAAG;AACrBC,EAAAA,eADqB;AAAA;AAAA;AAAA,6CACLC,GADK,EACAC,GADA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGjBC,cAAAA,uBAHiB,GAGS,oCAHT;AAAA;AAAA,qBAIAC,YAAGC,KAAH,CAASF,uBAAT,EAAkC,CAACF,GAAG,CAACK,IAAJ,CAASC,aAAV,CAAlC,CAJA;;AAAA;AAAA;AAIfC,cAAAA,IAJe,QAIfA,IAJe;;AAAA,kBAKlBA,IAAI,CAAC,CAAD,CALc;AAAA;AAAA;AAAA;;AAAA,+CAMdN,GAAG,CAACO,IAAJ,CAAS;AACdC,gBAAAA,MAAM,EAAE,GADM;AAEdC,gBAAAA,IAAI,EAAE,CAAC;AACLC,kBAAAA,OAAO,EAAE;AADJ,iBAAD;AAFQ,eAAT,CANc;;AAAA;AAAA,kBAalBX,GAAG,CAACK,IAAJ,CAASO,OAbS;AAAA;AAAA;AAAA;;AAAA,+CAcdX,GAAG,CAACO,IAAJ,CAAS;AACdC,gBAAAA,MAAM,EAAE,GADM;AAEdC,gBAAAA,IAAI,EAAE,CAAC;AACLC,kBAAAA,OAAO,EAAE;AADJ,iBAAD;AAFQ,eAAT,CAdc;;AAAA;AAAA,kBAqBlBX,GAAG,CAACK,IAAJ,CAASM,OArBS;AAAA;AAAA;AAAA;;AAAA,+CAsBdV,GAAG,CAACO,IAAJ,CAAS;AACdC,gBAAAA,MAAM,EAAE,GADM;AAEdC,gBAAAA,IAAI,EAAE,CAAC;AACLC,kBAAAA,OAAO,EAAE;AADJ,iBAAD;AAFQ,eAAT,CAtBc;;AAAA;AAAA,kBA6BlBX,GAAG,CAACa,IA7Bc;AAAA;AAAA;AAAA;;AAAA,+CA8BdZ,GAAG,CAACO,IAAJ,CAAS;AACdC,gBAAAA,MAAM,EAAE,GADM;AAEdC,gBAAAA,IAAI,EAAE,CAAC;AACLC,kBAAAA,OAAO,EAAE;AADJ,iBAAD;AAFQ,eAAT,CA9Bc;;AAAA;AAAA,oBAqCnBX,GAAG,CAACa,IAAJ,CAASC,KAAT,KAAmBd,GAAG,CAACK,IAAJ,CAASU,UArCT;AAAA;AAAA;AAAA;;AAAA,+CAsCdd,GAAG,CAACO,IAAJ,CAAS;AACdC,gBAAAA,MAAM,EAAE,GADM;AAEdC,gBAAAA,IAAI,EAAE,CAAC;AACLC,kBAAAA,OAAO,EAAE;AADJ,iBAAD;AAFQ,eAAT,CAtCc;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,+CA8ChBV,GAAG,CAACO,IAAJ,CAAS;AACdC,gBAAAA,MAAM,EAAE,GADM;AAEdC,gBAAAA,IAAI,EAAE,CAAC;AACLM,kBAAAA,KAAK;AADA,iBAAD;AAFQ,eAAT,CA9CgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAA7B;eAwDelB,oB","sourcesContent":["/* eslint-disable consistent-return */\r\nimport db from '../db';\r\n\r\nconst ValidateMessageInput = {\r\n  async newMessageInput(req, res) {\r\n    try {\r\n      const checkReceiverEmailQuery = 'SELECT * FROM users WHERE $1=email';\r\n      const { rows } = await db.query(checkReceiverEmailQuery, [req.body.receiverEmail]);\r\n      if (!rows[0]) {\r\n        return res.send({\r\n          status: 400,\r\n          data: [{\r\n            message: 'Receiver email does not exist',\r\n          }],\r\n        });\r\n      }\r\n      if (!req.body.subject) {\r\n        return res.send({\r\n          status: 400,\r\n          data: [{\r\n            message: 'No subject is declared',\r\n          }],\r\n        });\r\n      }\r\n      if (!req.body.message) {\r\n        return res.send({\r\n          status: 400,\r\n          data: [{\r\n            message: 'No message content',\r\n          }],\r\n        });\r\n      }\r\n      if (!req.user) {\r\n        return res.send({\r\n          status: 400,\r\n          data: [{\r\n            message: 'Login to your account',\r\n          }],\r\n        });\r\n      }\r\n      if (req.user.email === req.body.receiverId) {\r\n        return res.send({\r\n          status: 400,\r\n          data: [{\r\n            message: 'Your message will be moved to drafts',\r\n          }],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return res.send({\r\n        status: 400,\r\n        data: [{\r\n          error,\r\n        }],\r\n      });\r\n    }\r\n  },\r\n};\r\n\r\nexport default ValidateMessageInput;\r\n"],"file":"MessagesValidator.js"}