{"version":3,"sources":["../../server/middleware/UserValidator.js"],"names":["ValidateUserInput","signUpField","req","res","body","firstName","send","status","data","message","lastName","test","password","username","securityKey","loginField","email","resetPasswordField"],"mappings":"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","file":"UserValidator.js","sourcesContent":["/* eslint-disable consistent-return */\n\nconst ValidateUserInput = {\n  async signUpField(req, res) {\n    try {\n      if (!req.body.firstName) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Enter your first name',\n          }],\n        });\n      }\n      if (!req.body.lastName) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Enter your last name',\n          }],\n        });\n      }\n      if (!/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[0-9])(?=.*?[$@#&!]).{6,}$/.test(req.body.password)) {\n        return res.status(400).send({\n          status: 400,\n          data: [{\n            message: 'Password should contain at least a lower and upper case, a digit and any of $,@,#,&,!',\n          }],\n        });\n      }\n      if (!req.body.username) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Enter your username',\n          }],\n        });\n      }\n      if (!/^[a-z\\d]{8,}$/i.test(req.body.username)) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'username should be at least 8 characters long',\n          }],\n        });\n      }\n      if (!req.body.password) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Enter password',\n          }],\n        });\n      }\n      if (!req.body.securityKey) {\n        return res.status(400).send({\n          status: 400,\n          data: [{\n            message: 'enter security password to reset your password',\n          }],\n        });\n      }\n    } catch (error) {\n      return res.send({\n        status: 400,\n        data: [\n          error,\n        ],\n      });\n    }\n  },\n  async loginField(req, res) {\n    try {\n      if (!req.body.email) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Enter your email address',\n          }],\n        });\n      }\n      if (!req.body.password) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Enter your password',\n          }],\n        });\n      }\n    } catch (error) {\n      return res.send({\n        status: 400,\n        data: [\n          error,\n        ],\n      });\n    }\n  },\n  async resetPasswordField(req, res) {\n    try {\n      if (!req.body.email) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Enter your email address',\n          }],\n        });\n      }\n      if (!req.body.securityKey) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Enter your security key',\n          }],\n        });\n      }\n      if (!req.body.password) {\n        return res.send({\n          status: 400,\n          data: [{\n            message: 'Enter your a new password',\n          }],\n        });\n      }\n    } catch (error) {\n      return res.send({\n        status: 400,\n        data: [\n          error,\n        ],\n      });\n    }\n  },\n};\n\nexport default ValidateUserInput;\n"]}