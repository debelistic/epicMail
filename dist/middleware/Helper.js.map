{"version":3,"sources":["../../server/middleware/Helper.js"],"names":["Helper","hashPassword","password","bcrypt","hashSync","genSaltSync","comparePassword","compareSync","generateToken","email","token","jwt","sign","userEmail","process","env","SECRET","expiresIn"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,SAAS;AACb;;;AAGAC,cAJa,wBAIAC,QAJA,EAIU;AACrB,WAAOC,iBAAOC,QAAP,CAAgBF,QAAhB,EAA0BC,iBAAOE,WAAP,CAAmB,CAAnB,CAA1B,CAAP;AACD,GANY;;;AAQb;;;AAGAC,iBAXa,2BAWGJ,QAXH,EAWaD,YAXb,EAW2B;AACtC,WAAOE,iBAAOI,WAAP,CAAmBL,QAAnB,EAA6BD,YAA7B,CAAP;AACD,GAbY;;;AAeb;;;AAGAO,eAlBa,yBAkBCC,KAlBD,EAkBQ;AACnB,QAAMC,QAAQC,uBAAIC,IAAJ,CAAS;AACrBC,iBAAWJ;AADU,KAAT,EAGdK,QAAQC,GAAR,CAAYC,MAHE,EAGM,EAAEC,WAAW,IAAb,EAHN,CAAd;AAIA,WAAOP,KAAP;AACD;AAxBY,CAAf;kBA0BeV,M","file":"Helper.js","sourcesContent":["import bcrypt from 'bcrypt';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nconst Helper = {\r\n  /**\r\n   * Hash Password Method\r\n   */\r\n  hashPassword(password) {\r\n    return bcrypt.hashSync(password, bcrypt.genSaltSync(5));\r\n  },\r\n\r\n  /**\r\n   * Compare Password\r\n   */\r\n  comparePassword(password, hashPassword) {\r\n    return bcrypt.compareSync(password, hashPassword);\r\n  },\r\n\r\n  /**\r\n   * Generate Token\r\n   */\r\n  generateToken(email) {\r\n    const token = jwt.sign({\r\n      userEmail: email,\r\n    },\r\n    process.env.SECRET, { expiresIn: '5d' });\r\n    return token;\r\n  },\r\n};\r\nexport default Helper;\r\n"]}