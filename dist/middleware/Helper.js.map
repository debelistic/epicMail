{"version":3,"sources":["../../server/middleware/Helper.js"],"names":["Helper","hashPassword","password","bcrypt","hashSync","genSaltSync","comparePassword","compareSync","generateToken","id","token","jwt","sign","userId","process","env","SECRET","expiresIn"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG;AACb;;;AAGAC,EAAAA,YAJa,wBAIAC,QAJA,EAIU;AACrB,WAAOC,gBAAOC,QAAP,CAAgBF,QAAhB,EAA0BC,gBAAOE,WAAP,CAAmB,CAAnB,CAA1B,CAAP;AACD,GANY;;AAQb;;;AAGAC,EAAAA,eAXa,2BAWGJ,QAXH,EAWaD,YAXb,EAW2B;AACtC,WAAOE,gBAAOI,WAAP,CAAmBL,QAAnB,EAA6BD,YAA7B,CAAP;AACD,GAbY;;AAeb;;;AAGAO,EAAAA,aAlBa,yBAkBCC,EAlBD,EAkBK;AAChB,QAAMC,KAAK,GAAGC,sBAAIC,IAAJ,CAAS;AACrBC,MAAAA,MAAM,EAAEJ;AADa,KAAT,EAGdK,OAAO,CAACC,GAAR,CAAYC,MAHE,EAGM;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAHN,CAAd;;AAIA,WAAOP,KAAP;AACD;AAxBY,CAAf;eA0BeV,M","sourcesContent":["import bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\n\nconst Helper = {\n  /**\n   * Hash Password Method\n   */\n  hashPassword(password) {\n    return bcrypt.hashSync(password, bcrypt.genSaltSync(5));\n  },\n\n  /**\n   * Compare Password\n   */\n  comparePassword(password, hashPassword) {\n    return bcrypt.compareSync(password, hashPassword);\n  },\n\n  /**\n   * Generate Token\n   */\n  generateToken(id) {\n    const token = jwt.sign({\n      userId: id,\n    },\n    process.env.SECRET, { expiresIn: '7d' });\n    return token;\n  },\n};\nexport default Helper;\n"],"file":"Helper.js"}